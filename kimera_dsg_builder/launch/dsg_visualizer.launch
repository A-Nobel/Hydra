<?xml version="1.0" encoding="ISO-8859-15"?>
<launch>
  <arg name="scene_graph"/>
  <arg name="scene_graph_dir" default="$(find kimera_dsg_builder)/output"/>
  <arg name="scene_graph_path" value="$(arg scene_graph_dir)/$(arg scene_graph)"/>

  <arg name="viz_config_dir" default="$(find kimera_dsg_builder)/config/incremental_visualizer"/>
  <arg name="visualizer_ns" default="/kimera_dsg_visualizer"/>
  <arg name="start_rviz" default="true"/>
  <arg name="publish_rotation" default="false"/>
  <arg name="mesh_plugin_type" default="PGMO"/>

  <arg name="verbosity" default="0"/>
  <arg name="debug" default="false"/>

  <arg name="launch-prefix" default="gdb --args" if="$(arg debug)"/>
  <arg name="launch-prefix" default="" unless="$(arg debug)"/>

  <arg name="publish_view_transforms" default="$(arg start_rviz)"/>
  <arg name="world_frame" default="world"/>

  <include file="$(find kimera_dsg_visualizer)/launch/includes/kimera_dsg_visualizer_params.xml">
      <arg name="viz_config_dir" value="$(arg viz_config_dir)"/>
      <arg name="visualizer_ns" value="$(arg visualizer_ns)"/>
      <arg name="world_frame" default="$(arg world_frame)"/>
  </include>

  <node name="$(anon dsg_visualizer_node)"
        pkg="kimera_dsg_builder"
        type="dsg_visualizer_node"
        output="screen"
        required="true"
        args="-alsologtostderr -colorlogtostderr -v=$(arg verbosity)">
    <param name="visualizer_ns" value="$(arg visualizer_ns)"/>
    <param name="scene_graph_filepath" value="$(arg scene_graph_path)"/>
    <param name="load_graph" value="true"/>
    <param name="mesh_plugin_type" value="$(arg mesh_plugin_type)"/>
  </node>

  <node name="rviz" pkg="rviz" type="rviz" output="screen" if="$(arg start_rviz)"
          args="-d $(find kimera_dsg_builder)/rviz/dsg_visualizer.rviz"/>

  <group if="$(arg publish_view_transforms)">
    <!-- Publish a static tf to visualize scene-graph in orthographic projection sideways -->
    <node pkg="tf2_ros"
        type="static_transform_publisher"
        name="ortho_tf_publisher"
        args="0 0 0 0.707 0 0 0.707 $(arg world_frame) rviz_ortho"/>

    <!-- Publish a static tf to visualize scene-graph top-down -->
    <node pkg="tf2_ros"
        type="static_transform_publisher"
        name="topdown_tf_publisher"
        args="0 0 0 0 0.707 0 0.707 $(arg world_frame) rviz_topdown"/>
  </group>

  <node pkg="kimera_dsg_visualizer" type="rotate_tf_node" name="$(anon rotate_tf_node)"
        if="$(arg publish_rotation)">
      <param name="parent_frame" value="world"/>
      <param name="child_frame" value="rotated_view"/>
      <param name="period_s" value="25.0"/>
      <param name="radius" value="70.0"/>
      <rosparam param="centroid">[3.0, 25.0, 40.0]</rosparam>
  </node>

</launch>
