<?xml version="1.0" encoding="ISO-8859-15"?>
<launch>
  <arg name="voxel_size"     default="0.05"/>

  <arg name="sensor_frame" default="left_cam"/>
  <arg name="world_frame" default="world"/>

  <arg name="scene" default="scene5"/>
  <arg name="data_path" default="/home/ubuntu/datasets/tesse_goseek"/>
  <arg name="scene_path" default="$(arg data_path)/$(arg scene)"/>

  <arg name="tsdf_map_path" default="$(arg scene_path)/$(arg scene)_tsdf.vxblx"/>
  <arg name="rgb_tsdf_map_path" default="$(arg scene_path)/$(arg scene)_tsdf.vxblx"/>
  <arg name="esdf_map_path" default="$(arg scene_path)/$(arg scene)_esdf.vxblx"/>
  <arg name="sparse_graph_path" default="$(arg scene_path)/$(arg scene)_sparse_graph.vxblx"/>

  <arg name="semantic_map_file" default="goseek_$(arg scene)_with_coco_segmentation_mapping.csv"/>
  <arg name="semantic_map_path" default="$(arg scene_path)/$(arg semantic_map_file)"/>
  <arg name="semantic_typology_file" default="goseek_typology.yaml"/>
  <arg name="semantic_typology_path" default="$(find kimera_scene_graph)/config/$(arg semantic_typology_file)"/>

  <arg name="verbosity" default="0"/>

  <arg name="debug" default="false"/>
  <arg name="launch-prefix" default="gdb --args" if="$(arg debug)"/>
  <arg name="launch-prefix" default="" unless="$(arg debug)"/>

  <arg name="visualizer_ns" value="/kimera_dsg_visualizer"/>
  <arg name="viz_config_dir" value="$(find kimera_dsg_visualizer)/config"/>
  <arg name="include_rviz" default="true"/>
  <include file="$(find kimera_dsg_visualizer)/launch/includes/kimera_dsg_visualizer_base.xml"
           pass_all_args="true"/>

  <node name="kimera_scene_graph_eval_node"
        pkg="kimera_scene_graph"
        type="scene_graph_eval"
        output="screen"
        launch-prefix="$(arg launch-prefix)"
        required="true"
        args="-alsologtostderr -colorlogtostderr -v=$(arg verbosity)">
    <param name="visualizer_ns" value="$(arg visualizer_ns)"/>

    <!--    2.1- scenes 1-4 -->
    <param name="room_finder_esdf_slice_level"       value="2.05"/>

    <!-- Object Finder Type: 0: region growing, 1: euclidean clustering -->
    <param name="object_finder_type"                 value="1"/>

    <!-- TODO(nathan) mesh -->
    <param name="semantic/voxel_size" value="0.05"/>
    <param name="semantic/voxels_per_side" value="32"/>
    <param name="semantic/tsdf_file" value="$(arg tsdf_map_path)"/>
    <param name="semantic/esdf_file" value="$(arg esdf_map_path)"/>
    <param name="semantic/add_robot_pose" value="false"/>
    <param name="semantic/generate_mesh" value="true"/>
    <param name="semantic/truncation_distance" value="0.4"/>
    <param name="semantic/esdf_min_distance_m" value="0.2"/>

    <!-- TODO(nathan) mesh -->
    <param name="rgb/voxel_size" value="0.05"/>
    <param name="rgb/voxels_per_side" value="32"/>
    <param name="rgb/tsdf_file" value="$(arg rgb_tsdf_map_path)"/>
    <param name="rgb/add_robot_pose" value="false"/>
    <param name="rgb/generate_mesh" value="true"/>
    <param name="rgb/truncation_distance" value="0.4"/>
    <param name="rgb/esdf_min_distance_m" value="0.2"/>

    <param name="world_frame" value="$(arg world_frame)"/>
    <param name="scene_graph_output_path" value="$(find kimera_scene_graph)/output/goseek_$(arg scene)_dsg.json"/>

    <rosparam command="load" file="$(arg semantic_typology_path)"/>
    <param name="skeleton_file" value="$(arg sparse_graph_path)"/>

    <param name="semantic_color_mode" value="semantic"/>
    <param name="semantic_measurement_probability" value="0.8" />
    <param name="semantic_label_2_color_csv_filepath" value="$(arg semantic_map_path)"/>

  </node>

</launch>
